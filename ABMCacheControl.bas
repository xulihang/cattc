B4J=true
Group=Default Group
ModulesStructureVersion=1
Type=Class
Version=5.9
@EndOfDesignText@
'Filter class
'----------------------START MODIFICATION 4.00-------------------------------
' Excellent comments from Mindful. Well worth the read!
Sub Class_Globals

End Sub

Public Sub Initialize

End Sub

'Return True to allow the request to proceed.
Public Sub Filter(req As ServletRequest, resp As ServletResponse) As Boolean
	' check if the file is static (exists on the file system) as we are going to
	' send caching directives to browsers only for those files
	
	Dim reqRequestURI As String = req.RequestURI
	If File.Exists(File.Combine(File.DirApp, "www"), reqRequestURI) Then
		If reqRequestURI.EndsWith("/") Or reqRequestURI.EndsWith(".html") Or reqRequestURI.EndsWith(".htm") Then
			' if the request is for one of the above then is more likely that the request is for a page from your app
			' check to see if the request if for a page from the abm app
			' because we do not need to get the session for other html pages outside the app folder
			' if so then create the session or use the browsers if one exists and it's a valid one
			' this is required by Safari as the session needs to be set in the html request and not in the websocket UpgradeRequest
			If reqRequestURI.StartsWith("/" & ABMShared.AppName) Then req.GetSession
			' as we are now not using query strings we need to know when some changes will happen with the
			' pages generated by ABMaterial so we are going to check if the cached file from the browser
			' has the same AppVersion as the app's AppVersion. We do this check only for html files because we do not
			' need to verify it's resources (css, js, fonts) because the library resources have the library version appended
			' to the filename and the generated resources have the AppVersion appended to the filename.
			If req.getHeader("If-None-Match") = ABMShared.AppVersion Then
				' if the file from the browser is the same as the one from the file system
				' then the server will just respond with 304
				resp.Status = 304
				' stop the request here and return the response to the browser
				Return False
			Else
				' if it's different or this is the first time for the browser requesting this file
				' we are going to respond with a header containing the current version
				' and cache instruction to always request this file from the server to compare its version
				resp.SetHeader("ETag", ABMShared.AppVersion)
				resp.SetHeader("Cache-Control", "no-cache")
			End If
		Else
			' if the request doesn't end in htm or html or / then we need to send instructions to the browser
			' to cache the response, because the request was for a static file or resource of the parent html page
			' example: if the request was for /font/roboto/Roboto-Regular.woff2 then we need to cache this file
			resp.SetHeader("Cache-Control", "public, max-age=31536000")
		End If
	Else
		' request is for a file that doesn't exist on file system (handlers and websockets are not on the file system)
		' it is important for the browser not to cache this response because
		' example: the request was for a file x.doc that isn't available on the file system
		' the server response will be 404 - not found, but after a while you add x.doc to the file system
		' so if the browser cached this too when someone that got and cached a 404 for x.doc
		' will always get 404 for x.doc
		' so any request for something that isn't on the file system is going to be not cacheable by the browser
		resp.SetHeader("Cache-Control", "no-cache, no-store") ' HTTP 1.1
		resp.SetHeader("Pragma", "no-cache") ' HTTP 1.0
		resp.SetHeader("Expires", "0") ' Proxies
		' check if the request is for session.heartbeat - if so we need to stop the request here and return the response
		' otherwise we will get 404 for this request as the resource doesn't exist.
		If reqRequestURI = "/" & ABMShared.AppName & "/" & "session.heartbeat" Then Return False
	End If
	' let the request to proceed after the filter
	Return True
	' this solution provides clear caching instruction for the browser because the 'workflow' of a browser is:
	' Connect to the application "/appname/" or "/appname/index.html" - browser will request this from the server
	' If the request is for a static file Then
	'     If the static file is html, htm or / Then
	'      If the request if for a file from within the app folder Then
	'        we are going to create a session or use the browser session cookie (if valid) (needed for Safari)
	'      End If
	'     If the browser stored file has the same AppVersion as the current AppVerion Then
	'        return 304 to the browser as the file hasn't changed and let the browser use it's cached version
	'      Else
	'        set the ETag header with the AppVersion
	'        set cache instructions for the browser so that it will always request this file from the server so we can validate it's version
	'      End If
	'    Else
	'     the request if for some other file (css, js, fonts, images)
	'     we are going to tell the browser to cache this for 1 year. There are 3 types of resources in an ABMaterial app:
	'     1. the static files (files from /www/js, /www/font, /www/css) - this files are versioned (appended to filename)
	'     2. the runtime generated files (fiels from /www/appname/) - the css and js files are versioned with the AppVersion appended to the filename
	'     3. user content (images, docs, other files) - let's say your app uses an image logo.png and after 1 month you change image, but users that
	'        have that image cached will still see the old files so we need to use query strings (logo.png?1231231) or provide versioning appended to the filename (logo.101.png)
	'    End If
	' Else
	'   the request is for some file that doens't exist on the file system
	'   so we need to tell the browser no to cache this response and always make a request to the server
	'   also if the request is for the session.heartbeat the we need to stop (Return False) the request here and return the response to the browser
	'   if we let it proceed (Return True) then the browser will receive 404 because the file doesn't exists - it is used to keep the session alive.
	' End If
End Sub
'----------------------END MODIFICATION 4.00-------------------------------